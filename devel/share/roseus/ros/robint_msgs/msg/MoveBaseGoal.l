;; Auto-generated. Do not edit!


(when (boundp 'robint_msgs::MoveBaseGoal)
  (if (not (find-package "ROBINT_MSGS"))
    (make-package "ROBINT_MSGS"))
  (shadow 'MoveBaseGoal (find-package "ROBINT_MSGS")))
(unless (find-package "ROBINT_MSGS::MOVEBASEGOAL")
  (make-package "ROBINT_MSGS::MOVEBASEGOAL"))

(in-package "ROS")
;;//! \htmlinclude MoveBaseGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass robint_msgs::MoveBaseGoal
  :super ros::object
  :slots (_target_pose _goal_type _enable_goal_candidate_search _enable_goal_increase_tolerance _enable_fixed_straight_path ))

(defmethod robint_msgs::MoveBaseGoal
  (:init
   (&key
    ((:target_pose __target_pose) (instance geometry_msgs::PoseStamped :init))
    ((:goal_type __goal_type) "")
    ((:enable_goal_candidate_search __enable_goal_candidate_search) nil)
    ((:enable_goal_increase_tolerance __enable_goal_increase_tolerance) nil)
    ((:enable_fixed_straight_path __enable_fixed_straight_path) nil)
    )
   (send-super :init)
   (setq _target_pose __target_pose)
   (setq _goal_type (string __goal_type))
   (setq _enable_goal_candidate_search __enable_goal_candidate_search)
   (setq _enable_goal_increase_tolerance __enable_goal_increase_tolerance)
   (setq _enable_fixed_straight_path __enable_fixed_straight_path)
   self)
  (:target_pose
   (&rest __target_pose)
   (if (keywordp (car __target_pose))
       (send* _target_pose __target_pose)
     (progn
       (if __target_pose (setq _target_pose (car __target_pose)))
       _target_pose)))
  (:goal_type
   (&optional __goal_type)
   (if __goal_type (setq _goal_type __goal_type)) _goal_type)
  (:enable_goal_candidate_search
   (&optional (__enable_goal_candidate_search :null))
   (if (not (eq __enable_goal_candidate_search :null)) (setq _enable_goal_candidate_search __enable_goal_candidate_search)) _enable_goal_candidate_search)
  (:enable_goal_increase_tolerance
   (&optional (__enable_goal_increase_tolerance :null))
   (if (not (eq __enable_goal_increase_tolerance :null)) (setq _enable_goal_increase_tolerance __enable_goal_increase_tolerance)) _enable_goal_increase_tolerance)
  (:enable_fixed_straight_path
   (&optional (__enable_fixed_straight_path :null))
   (if (not (eq __enable_fixed_straight_path :null)) (setq _enable_fixed_straight_path __enable_fixed_straight_path)) _enable_fixed_straight_path)
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/PoseStamped _target_pose
    (send _target_pose :serialization-length)
    ;; string _goal_type
    4 (length _goal_type)
    ;; bool _enable_goal_candidate_search
    1
    ;; bool _enable_goal_increase_tolerance
    1
    ;; bool _enable_fixed_straight_path
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/PoseStamped _target_pose
       (send _target_pose :serialize s)
     ;; string _goal_type
       (write-long (length _goal_type) s) (princ _goal_type s)
     ;; bool _enable_goal_candidate_search
       (if _enable_goal_candidate_search (write-byte -1 s) (write-byte 0 s))
     ;; bool _enable_goal_increase_tolerance
       (if _enable_goal_increase_tolerance (write-byte -1 s) (write-byte 0 s))
     ;; bool _enable_fixed_straight_path
       (if _enable_fixed_straight_path (write-byte -1 s) (write-byte 0 s))
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/PoseStamped _target_pose
     (send _target_pose :deserialize buf ptr-) (incf ptr- (send _target_pose :serialization-length))
   ;; string _goal_type
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _goal_type (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; bool _enable_goal_candidate_search
     (setq _enable_goal_candidate_search (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; bool _enable_goal_increase_tolerance
     (setq _enable_goal_increase_tolerance (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; bool _enable_fixed_straight_path
     (setq _enable_fixed_straight_path (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;;
   self)
  )

(setf (get robint_msgs::MoveBaseGoal :md5sum-) "fb8462c79e86387a5e3c986ae0b122df")
(setf (get robint_msgs::MoveBaseGoal :datatype-) "robint_msgs/MoveBaseGoal")
(setf (get robint_msgs::MoveBaseGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
geometry_msgs/PoseStamped target_pose
string goal_type
bool enable_goal_candidate_search
bool enable_goal_increase_tolerance
bool enable_fixed_straight_path

================================================================================
MSG: geometry_msgs/PoseStamped
# A Pose with reference coordinate frame and timestamp
Header header
Pose pose

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :robint_msgs/MoveBaseGoal "fb8462c79e86387a5e3c986ae0b122df")


