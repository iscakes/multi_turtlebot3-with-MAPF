// Generated by gencpp from file robint_msgs/ConvertToWorldPose.msg
// DO NOT EDIT!


#ifndef ROBINT_MSGS_MESSAGE_CONVERTTOWORLDPOSE_H
#define ROBINT_MSGS_MESSAGE_CONVERTTOWORLDPOSE_H

#include <ros/service_traits.h>


#include <robint_msgs/ConvertToWorldPoseRequest.h>
#include <robint_msgs/ConvertToWorldPoseResponse.h>


namespace robint_msgs
{

struct ConvertToWorldPose
{

typedef ConvertToWorldPoseRequest Request;
typedef ConvertToWorldPoseResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ConvertToWorldPose
} // namespace robint_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::robint_msgs::ConvertToWorldPose > {
  static const char* value()
  {
    return "71ebe842d35949565d497843290d72e2";
  }

  static const char* value(const ::robint_msgs::ConvertToWorldPose&) { return value(); }
};

template<>
struct DataType< ::robint_msgs::ConvertToWorldPose > {
  static const char* value()
  {
    return "robint_msgs/ConvertToWorldPose";
  }

  static const char* value(const ::robint_msgs::ConvertToWorldPose&) { return value(); }
};


// service_traits::MD5Sum< ::robint_msgs::ConvertToWorldPoseRequest> should match
// service_traits::MD5Sum< ::robint_msgs::ConvertToWorldPose >
template<>
struct MD5Sum< ::robint_msgs::ConvertToWorldPoseRequest>
{
  static const char* value()
  {
    return MD5Sum< ::robint_msgs::ConvertToWorldPose >::value();
  }
  static const char* value(const ::robint_msgs::ConvertToWorldPoseRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::robint_msgs::ConvertToWorldPoseRequest> should match
// service_traits::DataType< ::robint_msgs::ConvertToWorldPose >
template<>
struct DataType< ::robint_msgs::ConvertToWorldPoseRequest>
{
  static const char* value()
  {
    return DataType< ::robint_msgs::ConvertToWorldPose >::value();
  }
  static const char* value(const ::robint_msgs::ConvertToWorldPoseRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::robint_msgs::ConvertToWorldPoseResponse> should match
// service_traits::MD5Sum< ::robint_msgs::ConvertToWorldPose >
template<>
struct MD5Sum< ::robint_msgs::ConvertToWorldPoseResponse>
{
  static const char* value()
  {
    return MD5Sum< ::robint_msgs::ConvertToWorldPose >::value();
  }
  static const char* value(const ::robint_msgs::ConvertToWorldPoseResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::robint_msgs::ConvertToWorldPoseResponse> should match
// service_traits::DataType< ::robint_msgs::ConvertToWorldPose >
template<>
struct DataType< ::robint_msgs::ConvertToWorldPoseResponse>
{
  static const char* value()
  {
    return DataType< ::robint_msgs::ConvertToWorldPose >::value();
  }
  static const char* value(const ::robint_msgs::ConvertToWorldPoseResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROBINT_MSGS_MESSAGE_CONVERTTOWORLDPOSE_H
