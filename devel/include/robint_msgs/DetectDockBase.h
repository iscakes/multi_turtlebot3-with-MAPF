// Generated by gencpp from file robint_msgs/DetectDockBase.msg
// DO NOT EDIT!


#ifndef ROBINT_MSGS_MESSAGE_DETECTDOCKBASE_H
#define ROBINT_MSGS_MESSAGE_DETECTDOCKBASE_H

#include <ros/service_traits.h>


#include <robint_msgs/DetectDockBaseRequest.h>
#include <robint_msgs/DetectDockBaseResponse.h>


namespace robint_msgs
{

struct DetectDockBase
{

typedef DetectDockBaseRequest Request;
typedef DetectDockBaseResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct DetectDockBase
} // namespace robint_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::robint_msgs::DetectDockBase > {
  static const char* value()
  {
    return "4ead082030f3dc019a260fec9bdd9d31";
  }

  static const char* value(const ::robint_msgs::DetectDockBase&) { return value(); }
};

template<>
struct DataType< ::robint_msgs::DetectDockBase > {
  static const char* value()
  {
    return "robint_msgs/DetectDockBase";
  }

  static const char* value(const ::robint_msgs::DetectDockBase&) { return value(); }
};


// service_traits::MD5Sum< ::robint_msgs::DetectDockBaseRequest> should match
// service_traits::MD5Sum< ::robint_msgs::DetectDockBase >
template<>
struct MD5Sum< ::robint_msgs::DetectDockBaseRequest>
{
  static const char* value()
  {
    return MD5Sum< ::robint_msgs::DetectDockBase >::value();
  }
  static const char* value(const ::robint_msgs::DetectDockBaseRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::robint_msgs::DetectDockBaseRequest> should match
// service_traits::DataType< ::robint_msgs::DetectDockBase >
template<>
struct DataType< ::robint_msgs::DetectDockBaseRequest>
{
  static const char* value()
  {
    return DataType< ::robint_msgs::DetectDockBase >::value();
  }
  static const char* value(const ::robint_msgs::DetectDockBaseRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::robint_msgs::DetectDockBaseResponse> should match
// service_traits::MD5Sum< ::robint_msgs::DetectDockBase >
template<>
struct MD5Sum< ::robint_msgs::DetectDockBaseResponse>
{
  static const char* value()
  {
    return MD5Sum< ::robint_msgs::DetectDockBase >::value();
  }
  static const char* value(const ::robint_msgs::DetectDockBaseResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::robint_msgs::DetectDockBaseResponse> should match
// service_traits::DataType< ::robint_msgs::DetectDockBase >
template<>
struct DataType< ::robint_msgs::DetectDockBaseResponse>
{
  static const char* value()
  {
    return DataType< ::robint_msgs::DetectDockBase >::value();
  }
  static const char* value(const ::robint_msgs::DetectDockBaseResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROBINT_MSGS_MESSAGE_DETECTDOCKBASE_H
